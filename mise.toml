[tools]
go = "1.24.3"
python = "3.13"
pipx = "1.7"
"go:github.com/fzipp/gocyclo/cmd/gocyclo" = { version = "latest" }
"go:github.com/golangci/golangci-lint/v2/cmd/golangci-lint" = { version = "latest" }
"pipx:gitingest" = { version = "latest" }
"pipx:pre-commit" = { version = "latest" }

[tasks.build]
description = "Run build."
run = ["go build -o build/yuki.exe cmd/yuki/main.go"]

[tasks.lint]
description = "Run lint."
run = ["golangci-lint run"]

[tasks.test]
description = "Run tests."
run = ["go test ./..."]

[tasks.ready]
description = "Prepare for commit."
run = [
  "go fmt ./...",
  "go vet ./...",
  "go mod tidy -v",
  "golangci-lint run --fix",
  "go build -o build/yuki.exe cmd/yuki/main.go",
  "go test ./...",
  "gocyclo -over 15 .",
  "gitingest -o docs/digest.txt -e *.toml,*.txt,.roo/*,.cursor/*,build/*,.devenv/*,.direnv/*,docs/digest.txt,docs/archive/* .",
  "powershell -Command \"(Get-Content docs/digest.txt -Raw) -replace '(?m)^\\s*$', '' | Set-Content -NoNewline docs/digest.txt\"",
  "echo.>> docs/digest.txt"
]

[tasks.sign]
description = "Sign releases with GPG key."
run = ["python scripts/sign_releases.py nightconcept/almandine --yes"]

[tasks.digest]
description = "Run gitingest on current directory."
run = [
  "gitingest -o docs/digest.txt -e *.toml,*.txt,.roo/*,.cursor/*,build/*,.devenv/*,.direnv/*,docs/digest.txt,docs/archive/* ."
]

[tasks.doctor]
description = "Prepares the project for development."
run = [
  "pre-commit install --install-hooks --overwrite"
]